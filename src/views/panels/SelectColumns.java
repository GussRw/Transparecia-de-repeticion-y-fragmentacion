/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views.panels;

import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.util.ArrayList;
import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import models.Table;
import views.CreateQuery;
import static views.CreateQuery.selectedColumns;
import views.Main;

/**
 *
 * @author guss
 */
public class SelectColumns extends javax.swing.JPanel
{

    /**
     * Creates new form selectColumnsView
     */
    
    ArrayList<JCheckBox> checks = new ArrayList<JCheckBox>();
    public SelectColumns()
    {
        initComponents();
        selectedTablesPanel.setLayout(new FlowLayout());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        selectedTablesPanel = new javax.swing.JPanel();

        setMaximumSize(new java.awt.Dimension(700, 300));
        setMinimumSize(new java.awt.Dimension(700, 300));
        setPreferredSize(new java.awt.Dimension(700, 300));
        addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                formPropertyChange(evt);
            }
        });

        jButton2.setText("Atras");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setText("Siguiente");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        selectedTablesPanel.setMaximumSize(new java.awt.Dimension(700, 250));
        selectedTablesPanel.setMinimumSize(new java.awt.Dimension(700, 250));
        selectedTablesPanel.setPreferredSize(new java.awt.Dimension(700, 250));

        javax.swing.GroupLayout selectedTablesPanelLayout = new javax.swing.GroupLayout(selectedTablesPanel);
        selectedTablesPanel.setLayout(selectedTablesPanelLayout);
        selectedTablesPanelLayout.setHorizontalGroup(
            selectedTablesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        selectedTablesPanelLayout.setVerticalGroup(
            selectedTablesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 250, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(554, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap())
            .addComponent(selectedTablesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(selectedTablesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton2ActionPerformed
    {//GEN-HEADEREND:event_jButton2ActionPerformed
        CreateQuery.mainPanel.removeAll();
        CreateQuery.mainPanel.add(CreateQuery.selectTables);
        CreateQuery.mainPanel.revalidate();
        CreateQuery.mainPanel.repaint();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton1ActionPerformed
    {//GEN-HEADEREND:event_jButton1ActionPerformed
        ArrayList<String> finishTables = new ArrayList<String>();
        for(Table table : selectedColumns)
        {
            //System.out.println(table.getName() + ": " +table.getFillable().toString());
            if (!table.getFillable().isEmpty()) 
            {
                finishTables.add(table.getName());
            }
        }
        //System.out.println("-------------------------");
        if (finishTables.isEmpty()) 
        {
            JOptionPane.showMessageDialog(this, "Selecciona al menos una columna");
            return;
        }
        
        CreateQuery.selectCondition.updateTables(finishTables);
        CreateQuery.mainPanel.removeAll();
        CreateQuery.mainPanel.add(CreateQuery.selectCondition);
        CreateQuery.mainPanel.revalidate();
        CreateQuery.mainPanel.repaint();
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void formPropertyChange(java.beans.PropertyChangeEvent evt)//GEN-FIRST:event_formPropertyChange
    {//GEN-HEADEREND:event_formPropertyChange
        ((JDialog) this.getRootPane().getParent()).setTitle("Seleccionar Columnas");
        selectedTablesPanel.removeAll();
        for (String name : CreateQuery.selectedTables )
        {
            Table table = new Table(name,new ArrayList<String>());
            JPanel panel = new JPanel();
            panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
            JLabel title = new JLabel(name);
            panel.add(title);
            for(String column : Main.tables.get(Main.getTableIndex(name)).getFillable())
            {
            
                JCheckBox col = new JCheckBox(column); 
                col.addItemListener(new ItemListener()
                {
                    @Override
                    public void itemStateChanged(ItemEvent ie)
                    {
                        if (ie.getStateChange() == 1)
                            table.getFillable().add(column);
                        else
                            table.getFillable().remove(column);
                    }       
                });
                checks.add(col);
               
                for (Table tab : selectedColumns) 
                {
                    if (tab.getName() == name)
                    {
                        if (tab.getFillable().indexOf(col.getText()) != -1) 
                        {
                            col.setSelected(true);
                        }
                    } 
                    
                }

                panel.add(checks.get(checks.indexOf(col)));
            }
            
            
            
            ArrayList<Table> remove = new ArrayList<Table>();
            
            for(Table t : selectedColumns) 
            {
                if (t.getName()==table.getName() || CreateQuery.selectedTables.indexOf(t.getName()) == -1) 
                    remove.add(t);
                

                
            }
            
            selectedColumns.removeAll(remove);
             
            selectedColumns.add(table);
            
            selectedTablesPanel.add(panel);
            selectedTablesPanel.revalidate();
            selectedTablesPanel.repaint();
             
        }
    }//GEN-LAST:event_formPropertyChange


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel selectedTablesPanel;
    // End of variables declaration//GEN-END:variables
}
